---
export const prerender = false;
import { GET } from "./api/search";
import Layout from "../components/Layout.astro";

const searchText = Astro.url.searchParams.get("search-text") ?? null;

console.log(searchText);

async function getSearchResults(searchText: string) {
  let response = await GET(Astro);
  console.log({ response });
  const data = await response.json();
  return data;
}
const searchResults =
  searchText == null ? null : await getSearchResults(searchText);
console.log({ searchResults });
---

<Layout
  title="Categories - Volks-Typo"
  description="Browse articles by category"
  showSidebar={true}
>
  <div class="categories-page">
    <header class="page-header">
      <h1 class="page-title">Search</h1>
      <p class="page-description">warframe search</p>
      <hr class="page-rule" />
    </header>

    <div class="categories-grid">
      <form>
        <label>
          Enter a build request
          <input
            type="text"
            name="search-text"
            value={searchText}
            required
            minlength="4"
          />
        </label>
        <button>Search for a build</button>
      </form>
      {
        searchResults == null ? null : (
          <div>
            {searchResults.map((result) => (
              <div>Search result: {result}</div>
            ))}
          </div>
        )
      }
    </div>
  </div>
</Layout>

<style>
  .categories-page {
    max-width: 100%;
  }

  .page-header {
    text-align: center;
    margin-bottom: calc(var(--grid-unit) * 6);
  }

  .page-title {
    font-family: var(--font-heading-primary);
    font-size: 3rem;
    font-weight: 700;
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.15em;
    margin-bottom: calc(var(--grid-unit) * 2);
  }

  .page-description {
    font-size: 1.125rem;
    line-height: 1.6;
    color: var(--color-text-secondary);
    max-width: 600px;
    margin: 0 auto calc(var(--grid-unit) * 3);
  }

  .page-rule {
    height: 4px;
    background-color: var(--color-accent);
    border: none;
    width: 120px;
    margin: 0 auto;
  }

  .category-card {
    background-color: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: 6px;
    transition:
      transform 0.2s ease,
      border-color 0.2s ease,
      box-shadow 0.2s ease;
    overflow: hidden;
  }

  .category-card:hover {
    transform: translateY(-2px);
    border-color: var(--color-accent);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .category-link {
    display: block;
    padding: calc(var(--grid-unit) * 2);
    text-decoration: none;
    color: inherit;
  }

  .category-title {
    font-family: var(--font-heading-secondary);
    font-size: 1.1rem;
    font-weight: 700;
    margin-bottom: calc(var(--grid-unit) / 2);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    color: var(--color-text-primary);
    transition: color 0.2s ease;
  }

  .category-link:hover .category-title {
    color: var(--color-accent);
  }

  .category-count {
    font-family: var(--font-mono);
    font-size: 0.75rem;
    color: var(--color-text-muted);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin: 0;
  }

  .no-categories {
    text-align: center;
    padding: calc(var(--grid-unit) * 6);
    color: var(--color-text-muted);
    font-style: italic;
  }

  @media (max-width: 768px) {
    .page-title {
      font-size: 2.5rem;
    }

    .categories-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
